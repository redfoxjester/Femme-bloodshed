import pygame
import random

# Initialize Pygame
pygame.init()

# Set up the screen
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Shooter Game")

# Colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Player
player_width, player_height = 50, 50
player_x, player_y = WIDTH // 2 - player_width // 2, HEIGHT - player_height - 10
player_speed = 5

# Bullets
bullet_width, bullet_height = 5, 10
bullet_speed = 7
bullets = []

# Enemies
enemy_width, enemy_height = 50, 50
enemy_speed = 3
enemies = []

# Timer for enemy spawning
enemy_timer = 0
enemy_spawn_interval = 60  # Spawn enemy every 1 second (60 frames)

clock = pygame.time.Clock()

# Main game loop
running = True
while running:
    screen.fill(WHITE)

    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Player movement
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < WIDTH - player_width:
        player_x += player_speed

    # Shooting
    if keys[pygame.K_SPACE]:
        bullets.append([player_x + player_width // 2 - bullet_width // 2, player_y])

    # Update bullets
    for bullet in bullets:
        bullet[1] -= bullet_speed
        pygame.draw.rect(screen, RED, (bullet[0], bullet[1], bullet_width, bullet_height))

    # Spawn enemies
    enemy_timer += 1
    if enemy_timer >= enemy_spawn_interval:
        enemy_x = random.randint(0, WIDTH - enemy_width)
        enemies.append([enemy_x, 0])
        enemy_timer = 0

    # Update enemies
    for enemy in enemies:
        enemy[1] += enemy_speed
        pygame.draw.rect(screen, RED, (enemy[0], enemy[1], enemy_width, enemy_height))

        # Collision detection
        for bullet in bullets:
            if (bullet[1] < enemy[1] + enemy_height) and \
               (bullet[1] + bullet_height > enemy[1]) and \
               (bullet[0] < enemy[0] + enemy_width) and \
               (bullet[0] + bullet_width > enemy[0]):
                bullets.remove(bullet)
                enemies.remove(enemy)

    # Draw player
    pygame.draw.rect(screen, RED, (player_x, player_y, player_width, player_height))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()

